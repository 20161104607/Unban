<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
  <!--配置数据源 -->
   <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
   p:driverClass="com.mysql.jdbc.Driver"
   p:jdbcUrl="jdbc:mysql://localhost:3306/urban?characterEncoding=UTF-8"
   p:username="root"
   p:password="root"/>
   
   <!--配置sqlSessionFactory -->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" 
   p:dataSource-ref="dataSource" p:configLocation="classpath:mybatis.xml"/>
  
  <!--注入映射器 -->
  <!--basePackage指定了扫描的基准包，批量产生映射器实现类 -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
  p:basePackage="com.lly.dao"/>
  
  <!--扫描组件bean 将所有的实体交给spring处理-->
  <context:component-scan base-package="com.lly"/>
  
  <!--配置事务管理器-->
  <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
  p:dataSource-ref="dataSource"/>
  <!--配置基于注解的事务支持 --> 
  <tx:annotation-driven transaction-manager="txManager"/>
  </beans>